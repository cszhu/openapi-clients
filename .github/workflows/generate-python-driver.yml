on: [ workflow_call ]

env:
  SPEC_DIR: ${{ github.workspace }}/specs_preprocessed
  PYTHON_DIR: ${{ github.workspace }}/sdks/python
  VERSION: 0.0.1

jobs:
  setup-environment:
    name: Setup Environment
    runs-on: ubuntu-latest
    env:
      ORIG_SPEC_DIR: ${{ github.workspace }}/res
      PREPROCESS: true

    steps:
#      - name: check node
#        run: |
#          node --version
#          return -1

      - uses: actions/checkout@v4

      - name: Create Python SDK version branch
        run: |
          git config --global url."https://api:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          if [ ! -d "$PYTHON_DIR/src" ]; then
            git clone https://github.com/visier/python-sdk.git $PYTHON_DIR/src
            cd $PYTHON_DIR/src
            git checkout -b versions/$VERSION
            git push origin versions/$VERSION
          else
            echo "Directory $PYTHON_DIR/src already exists. Using the existing directory."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        if: env.PREPROCESS == 'true'
        run: |
          python3 -m pip install -r $PYTHON_DIR/processing/requirements.txt

      - name: Preprocess OpenAPI specs
        if: env.PREPROCESS == 'true'
        id: preprocess
        run: |
          python3 $PYTHON_DIR/processing/spec_preprocessing.py $ORIG_SPEC_DIR $SPEC_DIR
          echo "SPEC_DIR=$SPEC_DIR" >> $GITHUB_ENV

      - name: Upload artifact processed specs
        uses: actions/upload-artifact@v3
        with:
          name: processed-specs-${{env.VERSION}}
          path: ${{ env.SPEC_DIR }}
          retention-days: 1

  generate-python-driver:
    name: Test Python drivers
    runs-on: ubuntu-latest
    needs: setup-environment
    container:
      image: openapitools/openapi-generator-cli:latest
    env:
      PACKAGE_DIR: ${{ github.workspace }}/specs_preprocessed

    strategy:
      max-parallel: 8
      matrix:
        driver: [
          "consolidated-analytics-apis",
          #          "data-handling-apis",
          #          "data-intake-apis",
          #          "data-version-export-apis",
          #          "direct-data-intake-apis",
          #          "document-search-apis",
          #          "model-query-apis",
          #          "object-configuration-apis",
          #          "permission-management-apis",
          #          "profile-management-apis",
          #          "project-management-apis",
          #          "system-status-apis",
          #          "tenant-management-apis",
          #          "user-management-apis"
        ]
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y git
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash
          apt install -y nodejs
          apt-get install -y python3 python3-pip
          pip install tox

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: processed-specs-${{env.VERSION}}
          path: ${{ env.SPEC_DIR }}

      - uses: actions/checkout@v4

      - name: Create Python SDK version branch
        run: |
          git config --global url."https://api:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          # Made to support --bind option for local debugging using Github Act
          if [ ! -d "$PYTHON_DIR/src" ]; then
            git clone https://github.com/visier/python-sdk.git $PYTHON_DIR/src
            cd $PYTHON_DIR/src
            git checkout versions/$VERSION
          else
            echo "Directory $PYTHON_DIR/src already exists. Using the existing directory."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate client wrapper for ${{ matrix.driver }} in Python
        run: |
          spec_file="$SPEC_DIR/${{ matrix.driver }}.yaml"
          package_name="visier.api.$(echo "${{ matrix.driver }}" | sed 's/-apis$//; s/-/_/g')"
          OUTPUT_DIR="$PYTHON_DIR/src/$package_name"
          echo "OUTPUT_DIR=$OUTPUT_DIR" >> $GITHUB_ENV
          
          # Extract the version from the OpenAPI spec file
          # TODO for now, we will use debug version
          # package_version=$(grep 'version:' "$spec_file" | sed 's/version: //; s/^[ \t]*//')
          package_version="0.0.1"
          
          mkdir -p $OUTPUT_DIR
          docker-entrypoint.sh generate \
            -i "$spec_file" \
            -g python \
            -t $PYTHON_DIR/templates \
            --package-name "$package_name" \
            -o "$OUTPUT_DIR" \
            --skip-validate-spec \
            --additional-properties=packageVersion="$package_version"

      # Pushing before tests to have the code available for debugging
      - name: Push Python SDK branch
        run: |
          git config --global url."https://api:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          git config --global user.email "shmalikov@gmail.com"
          git config --global user.name "Shmalikov"
          cd $PYTHON_DIR/src
          ls .
          git add $OUTPUT_DIR
          git commit -m "Add ${{ matrix.driver }} Python SDK"
          git push origin versions/$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test generated Python SDK
        run: |
          cd $OUTPUT_DIR
          tox

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6.1.0
        with:
          path: ${{ env.PYTHON_DIR }}/src
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: origin/versions/$VERSION
          base: main
          title: "Autogenerated PR to add ${{ matrix.driver }} Python SDK"
          body: "This PR adds the ${{ matrix.driver }} Python SDK generated from OpenAPI specs."
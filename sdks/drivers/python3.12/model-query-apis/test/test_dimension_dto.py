# coding: utf-8

"""
    Visier Public Platform APIs

    Visier APIs for querying data and model metadata

    The version of the OpenAPI document: 22222222.99201.1371
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.model_query.models.dimension_dto import DimensionDTO

class TestDimensionDTO(unittest.TestCase):
    """DimensionDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DimensionDTO:
        """Test DimensionDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DimensionDTO`
        """
        model = DimensionDTO()
        if include_optional:
            return DimensionDTO(
                id = '',
                display_name = '',
                description = '',
                levels = [
                    visier.model_query.models.level_dto.LevelDTO(
                        id = '', 
                        display_name = '', 
                        depth = 56, )
                    ],
                unknown_member = [
                    ''
                    ],
                member_count = 56,
                visible_in_app = True,
                tags = [
                    visier.model_query.models.tag_map_element_dto.TagMapElementDTO(
                        id = '', 
                        display_name = '', )
                    ]
            )
        else:
            return DimensionDTO(
        )
        """

    def testDimensionDTO(self):
        """Test DimensionDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

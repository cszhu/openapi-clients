# coding: utf-8

"""
    Visier Public Platform APIs

    Visier APIs for querying data and model metadata

    The version of the OpenAPI document: 22222222.99201.1371
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.model_query.models.planning_plans_dto import PlanningPlansDTO

class TestPlanningPlansDTO(unittest.TestCase):
    """PlanningPlansDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlanningPlansDTO:
        """Test PlanningPlansDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlanningPlansDTO`
        """
        model = PlanningPlansDTO()
        if include_optional:
            return PlanningPlansDTO(
                plans = [
                    visier.model_query.models.planning_plan_dto.PlanningPlanDTO(
                        id = '', 
                        name = '', 
                        subject_id = '', 
                        default_contexts = [
                            visier.model_query.models.planning_plan_context_dto.PlanningPlanContextDTO(
                                hierarchy_filter_context = null, 
                                concept_filter_context = null, )
                            ], 
                        plan_dimension_ids = [
                            ''
                            ], 
                        scenarios = [
                            visier.model_query.models.scenario_or_snapshot_dto.ScenarioOrSnapshotDTO(
                                id = '', 
                                display_name = '', )
                            ], 
                        snapshots = [
                            visier.model_query.models.scenario_or_snapshot_dto.ScenarioOrSnapshotDTO(
                                id = '', 
                                display_name = '', )
                            ], )
                    ]
            )
        else:
            return PlanningPlansDTO(
        )
        """

    def testPlanningPlansDTO(self):
        """Test PlanningPlansDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

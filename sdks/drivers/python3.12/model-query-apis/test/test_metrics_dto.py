# coding: utf-8

"""
    Visier Public Platform APIs

    Visier APIs for querying data and model metadata

    The version of the OpenAPI document: 22222222.99201.1371
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.model_query.models.metrics_dto import MetricsDTO

class TestMetricsDTO(unittest.TestCase):
    """MetricsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricsDTO:
        """Test MetricsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricsDTO`
        """
        model = MetricsDTO()
        if include_optional:
            return MetricsDTO(
                metrics = [
                    visier.model_query.models.metric_dto.MetricDTO(
                        id = '', 
                        display_name = '', 
                        description = '', 
                        data_start_date = '', 
                        data_end_date = '', 
                        analytic_object_id = '', 
                        parameters = [
                            visier.model_query.models.parameter_definition_dto.ParameterDefinitionDTO(
                                member_parameter = null, 
                                numeric_parameter = null, 
                                plan_parameter = null, 
                                aggregation_type_parameter = null, )
                            ], 
                        category = 'REGULAR', 
                        visible_in_app = True, )
                    ]
            )
        else:
            return MetricsDTO(
        )
        """

    def testMetricsDTO(self):
        """Test MetricsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

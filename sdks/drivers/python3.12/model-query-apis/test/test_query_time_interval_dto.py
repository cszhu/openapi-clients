# coding: utf-8

"""
    Visier Public Platform APIs

    Visier APIs for querying data and model metadata

    The version of the OpenAPI document: 22222222.99201.1081
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.model_query.models.query_time_interval_dto import QueryTimeIntervalDTO

class TestQueryTimeIntervalDTO(unittest.TestCase):
    """QueryTimeIntervalDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryTimeIntervalDTO:
        """Test QueryTimeIntervalDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryTimeIntervalDTO`
        """
        model = QueryTimeIntervalDTO()
        if include_optional:
            return QueryTimeIntervalDTO(
                from_instant = '',
                from_date_time = '',
                interval_period_type = 56,
                interval_period_count = 56,
                direction = 56,
                shift = visier.model_query.models.time_shift_dto.TimeShiftDTO(
                    period_type = 56, 
                    period_count = 56, 
                    direction = 56, )
            )
        else:
            return QueryTimeIntervalDTO(
        )
        """

    def testQueryTimeIntervalDTO(self):
        """Test QueryTimeIntervalDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

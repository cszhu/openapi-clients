# coding: utf-8

"""
    Visier Public Platform APIs

    Visier APIs for querying data and model metadata

    The version of the OpenAPI document: 22222222.99201.1371
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.model_query.models.list_query_execution_options_dto import ListQueryExecutionOptionsDTO

class TestListQueryExecutionOptionsDTO(unittest.TestCase):
    """ListQueryExecutionOptionsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListQueryExecutionOptionsDTO:
        """Test ListQueryExecutionOptionsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListQueryExecutionOptionsDTO`
        """
        model = ListQueryExecutionOptionsDTO()
        if include_optional:
            return ListQueryExecutionOptionsDTO(
                limit = 56,
                query_mode = 'DEFAULT',
                omit_header = True,
                calendar_type = 'TENANT_CALENDAR',
                currency_conversion_mode = 'TENANT_CURRENCY_CONVERSION',
                currency_conversion_date = '',
                page = 56,
                multiple_tables = True,
                currency_conversion_code = '',
                record_mode = 'NORMAL',
                date_time_display_mode = 'EPOCH'
            )
        else:
            return ListQueryExecutionOptionsDTO(
        )
        """

    def testListQueryExecutionOptionsDTO(self):
        """Test ListQueryExecutionOptionsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
